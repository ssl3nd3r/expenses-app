name: Expenses
description: |-

  APIs for managing expenses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/expenses
    metadata:
      groupName: Expenses
      groupDescription: |-

        APIs for managing expenses
      subgroup: ''
      subgroupDescription: ''
      title: 'List Expenses'
      description: 'Get a list of all expenses with optional filtering.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      category:
        name: category
        description: 'Filter expenses by category.'
        required: false
        example: food
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Filter expenses by start date (Y-m-d).'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Filter expenses by end date (Y-m-d).'
        required: false
        example: '2024-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      category: food
      start_date: '2024-01-01'
      end_date: '2024-12-31'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": "550e8400-e29b-41d4-a716-446655440000",
               "title": "Grocery Shopping",
               "amount": "150.75",
               "category": "food",
               "expense_date": "2024-03-21",
               "notes": "Weekly groceries",
               "created_at": "2024-03-21 10:00:00",
               "updated_at": "2024-03-21 10:00:00"
             }
           ],
           "meta": {
             "total": 1,
             "total_amount": "150.75"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/expenses
    metadata:
      groupName: Expenses
      groupDescription: |-

        APIs for managing expenses
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Expense'
      description: 'Create a new expense record.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the expense.'
        required: true
        example: 'Grocery Shopping'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'The amount of the expense.'
        required: true
        example: '150.75'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category:
        name: category
        description: 'The category of the expense.'
        required: true
        example: food
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      expense_date:
        name: expense_date
        description: 'The date of the expense.'
        required: true
        example: '2024-03-21'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'optional Additional notes about the expense.'
        required: false
        example: 'Weekly groceries from Walmart'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'Grocery Shopping'
      amount: '150.75'
      category: food
      expense_date: '2024-03-21'
      notes: 'Weekly groceries from Walmart'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Expense created successfully",
           "data": {
             "id": "550e8400-e29b-41d4-a716-446655440000",
             "title": "Grocery Shopping",
             "amount": "150.75",
             "category": "food",
             "expense_date": "2024-03-21",
             "notes": "Weekly groceries from Walmart",
             "created_at": "2024-03-21 10:00:00",
             "updated_at": "2024-03-21 10:00:00"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Expenses
      groupDescription: |-

        APIs for managing expenses
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Expense'
      description: 'Get details of a specific expense.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The UUID of the expense.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Expense fetched successfully",
           "data": {
             "id": "550e8400-e29b-41d4-a716-446655440000",
             "title": "Grocery Shopping",
             "amount": "150.75",
             "category": "food",
             "expense_date": "2024-03-21",
             "notes": "Weekly groceries from Walmart",
             "created_at": "2024-03-21 10:00:00",
             "updated_at": "2024-03-21 10:00:00"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "Expense not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Expenses
      groupDescription: |-

        APIs for managing expenses
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Expense'
      description: 'Update an existing expense record.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The UUID of the expense.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the expense.'
        required: true
        example: 'Grocery Shopping'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'The amount of the expense.'
        required: true
        example: '150.75'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category:
        name: category
        description: 'The category of the expense.'
        required: true
        example: food
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      expense_date:
        name: expense_date
        description: 'The date of the expense.'
        required: true
        example: '2024-03-21'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'optional Additional notes about the expense.'
        required: false
        example: 'Weekly groceries from Walmart'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'Grocery Shopping'
      amount: '150.75'
      category: food
      expense_date: '2024-03-21'
      notes: 'Weekly groceries from Walmart'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Expense updated successfully",
           "data": {
             "id": "550e8400-e29b-41d4-a716-446655440000",
             "title": "Grocery Shopping",
             "amount": "150.75",
             "category": "food",
             "expense_date": "2024-03-21",
             "notes": "Weekly groceries from Walmart",
             "created_at": "2024-03-21 10:00:00",
             "updated_at": "2024-03-21 10:00:00"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "Expense not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Expenses
      groupDescription: |-

        APIs for managing expenses
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Expense'
      description: 'Delete an existing expense record.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The UUID of the expense.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Expense deleted successfully",
           "data": {
             "id": "550e8400-e29b-41d4-a716-446655440000",
             "title": "Grocery Shopping",
             "amount": "150.75",
             "category": "food",
             "expense_date": "2024-03-21",
             "notes": "Weekly groceries from Walmart",
             "created_at": "2024-03-21 10:00:00",
             "updated_at": "2024-03-21 10:00:00"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "Expense not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
